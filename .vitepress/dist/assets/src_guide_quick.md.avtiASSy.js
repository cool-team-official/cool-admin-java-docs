import{_ as e,D as t,c as h,j as a,a as s,I as p,w as l,a4 as i,o as k}from"./chunks/framework.DHgIdERs.js";const v=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"src/guide/quick.md","filePath":"src/guide/quick.md","lastUpdated":null}'),o={name:"src/guide/quick.md"},r=i('<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><h2 id="前置准备" tabindex="-1">前置准备 <a class="header-anchor" href="#前置准备" aria-label="Permalink to &quot;前置准备&quot;">​</a></h2><ul><li>Java Jdk &gt;= 17 选择 GraalVM</li><li>Mysql &gt;= 5.7</li><li>Maven &gt;= 3.0</li></ul><h2 id="运行系统" tabindex="-1">运行系统 <a class="header-anchor" href="#运行系统" aria-label="Permalink to &quot;运行系统&quot;">​</a></h2>',4),c=a("li",null,[s("1、"),a("a",{href:"/src/introduce/src.html"},"拉取前后端代码到本地"),s("。")],-1),d=a("li",null,"2、选择你熟悉的开发工具，打开你的项目。",-1),E=a("li",null,[s("3、确保打开的项目有Maven依赖，如没有具体参考"),a("a",{href:"/src/question/commonQuestion.html#IDEA导入Maven项目右侧没有Maven"},"IDEA导入Maven项目右侧没有Maven"),s("。")],-1),g=i(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2024-05-25T00:11:36.475+08:00  INFO 8321 --- [cool-admin-java] [uartzScheduler]] o.s.s.quartz.SchedulerFactoryBean        : Starting Quartz Scheduler now, after delay of 2 seconds</span></span>
<span class="line"><span>2024-05-25T00:11:36.475+08:00  INFO 8321 --- [cool-admin-java] [uartzScheduler]] org.quartz.core.QuartzScheduler          : Scheduler quartzScheduler_$_NON_CLUSTERED started.</span></span>
<span class="line"><span>2024-05-25T00:11:36.717+08:00  INFO 8321 --- [cool-admin-java] [nio-8001-exec-1] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 1044 ms</span></span>
<span class="line"><span>2024-05-25T00:11:40.195+08:00  INFO 8321 --- [cool-admin-java] [pool-3-thread-1] com.cool.core.eps.CoolEps                : 初始化eps</span></span></code></pre></div><ul><li>5、<a href="https://cool-js.com/admin/vue/introduce.html#%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93" target="_blank" rel="noreferrer">启动前端系统</a></li><li>6、访问<a href="http://127.0.0.1:9100" target="_blank" rel="noreferrer">http://127.0.0.1:9100</a> 默认账户密码</li></ul><blockquote><p>账户：admin<br> 密码：123456</p></blockquote><h2 id="项目包结构" tabindex="-1">项目包结构 <a class="header-anchor" href="#项目包结构" aria-label="Permalink to &quot;项目包结构&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>main</span></span>
<span class="line"><span>├─ java</span></span>
<span class="line"><span>│  ├─ com.cool</span></span>
<span class="line"><span>│  ├─ core             核心包</span></span>
<span class="line"><span>│  │  ├─ annotation</span></span>
<span class="line"><span>│  │  └─ ...</span></span>
<span class="line"><span>│  ├─ modules          模块包</span></span>
<span class="line"><span>│  │  ├─ base              基础模块（系统用户、菜单、资源、角色）</span></span>
<span class="line"><span>│  │  │  ├─ controller</span></span>
<span class="line"><span>│  │  │  ├─ entity</span></span>
<span class="line"><span>│  │  │  ├─ mapper</span></span>
<span class="line"><span>│  │  │  └─ service</span></span>
<span class="line"><span>│  │  ├─ dict              字段模块</span></span>
<span class="line"><span>│  │  ├─ plugin            插件模块</span></span>
<span class="line"><span>│  │  ├─ recycle           数据回收站模块</span></span>
<span class="line"><span>│  │  ├─ space             文件管理模块</span></span>
<span class="line"><span>│  │  ├─ task              定时任务模块</span></span>
<span class="line"><span>│  │  └─ user              用户管理模块(c端用户)</span></span>
<span class="line"><span>│  └─ CoolApplication</span></span>
<span class="line"><span>└─ resources           资源文件</span></span>
<span class="line"><span>   ├─ cool</span></span>
<span class="line"><span>   │  └─ data</span></span>
<span class="line"><span>   │     └─ db         初始化数据json文件</span></span>
<span class="line"><span>   └─ mapper           mapper xml 文件</span></span></code></pre></div><ul><li>core 为核心模块，包括一些核心的组件工具</li><li>modules 为业务模块，业务代码放在这边，在新增功能模块时，按上面的包结构新增即可 <blockquote><p>比如你有一个订单管理的模块，在 modules 新增一个 order 包，在 order 包下创建 controller、entity、mapper、service 等包</p></blockquote></li></ul><h2 id="表结构创建" tabindex="-1">表结构创建 <a class="header-anchor" href="#表结构创建" aria-label="Permalink to &quot;表结构创建&quot;">​</a></h2><p>无需手动创建表结构，启动项目时会自动生成表结构 在 modules 包下新建一个 demo 模块，把 DemoEntity 实体创建出来</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.cool.modules.demo.entity;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.cool.core.base.BaseEntity;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.mybatisflex.annotation.Table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.tangzc.mybatisflex.autotable.annotation.ColumnDefine;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.tangzc.autotable.annotation.Index;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lombok.Getter;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lombok.Setter;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Getter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Setter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;demo实体&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DemoEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DemoEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ColumnDefine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;头像&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">notNull</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String headImg;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Index</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ColumnDefine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;名字&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">notNull</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String name;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ColumnDefine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;年龄&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">defaultValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Integer age;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ColumnDefine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;手机号&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">notNull</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String phone;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ColumnDefine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;介绍&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String introduce;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>无需手动添加数据库字段，只需修改实体对象就能自动添加表字段<br> 请参考 <a href="https://autotable.tangzc.com/" target="_blank" rel="noreferrer">AutoTable</a> 由该框架实现</p>`,10),u=i(`<h2 id="第一个-crud" tabindex="-1">第一个 CRUD <a class="header-anchor" href="#第一个-crud" aria-label="Permalink to &quot;第一个 CRUD&quot;">​</a></h2><p>实体创建完成后，通过 运行以下代码(在 test 包下)</p><p>将在 com.cool.modules 下生成 demo 包且自动生成对应的 controller、service、mapper 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>package com.cool;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import com.cool.core.code.CodeGenerator;</span></span>
<span class="line"><span>import com.cool.core.code.CodeModel;</span></span>
<span class="line"><span>import com.cool.core.code.CodeTypeEnum;</span></span>
<span class="line"><span>import com.cool.modules.demo.entity.DemoEntity;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public class CoolCodeGeneratorTest {</span></span>
<span class="line"><span>    public static void main(String[] args) {</span></span>
<span class="line"><span>        CodeGenerator codeGenerator = new CodeGenerator();</span></span>
<span class="line"><span>        codeGenerator.init();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        CodeModel codeModel = new CodeModel();</span></span>
<span class="line"><span>        codeModel.setType(CodeTypeEnum.ADMIN);</span></span>
<span class="line"><span>        codeModel.setName(&quot;测试CURD&quot;);</span></span>
<span class="line"><span>        codeModel.setModule(&quot;demo&quot;);</span></span>
<span class="line"><span>        codeModel.setEntity(DemoEntity.class);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        codeGenerator.controller(codeModel);</span></span>
<span class="line"><span>        codeGenerator.mapper(codeModel);</span></span>
<span class="line"><span>        codeGenerator.service(codeModel);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="配置数据库信息" tabindex="-1">配置数据库信息 <a class="header-anchor" href="#配置数据库信息" aria-label="Permalink to &quot;配置数据库信息&quot;">​</a></h2><p>/resources/application-local.yml(开发环境)</p><p>/resources/application-prod.yml(生成环境)</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  datasource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc:mysql://127.0.0.1:3306/cool?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2b8</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456</span></span></code></pre></div>`,8);function y(m,F,C,_,b,D){const n=t("font");return k(),h("div",null,[r,a("ul",null,[c,d,E,a("li",null,[s("4、打开项目运行 "),p(n,{color:"4364CF"},{default:l(()=>[s("com.cool.CoolApplication.java")]),_:1}),s("，出现如下日志表示启动成功。")])]),g,a("blockquote",null,[a("p",null,[s("注意: "),p(n,{color:"red"},{default:l(()=>[s("默认仅开发环境开启该功能，如无调整生产环境需手动创建表结构")]),_:1})])]),u])}const q=e(o,[["render",y]]);export{v as __pageData,q as default};
